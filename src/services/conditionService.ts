// Sistema de condi√ß√µes espec√≠ficas por categoria
export interface Condition {
  id: string;
  name: string;
  description: string;
  icon: string;
  category: 'account' | 'skin' | 'giftcard' | 'service';
}

export const CONDITIONS_BY_CATEGORY: Record<string, Condition[]> = {
  account: [
    {
      id: 'verified_account',
      name: '‚úÖ Conta Verificada',
      description: 'Conta verificada por email oficial',
      icon: '‚úÖ',
      category: 'account'
    },
    {
      id: 'original_email',
      name: 'üîë Email Original Incluso',
      description: 'Acesso ao email original da conta',
      icon: 'üîë',
      category: 'account'
    },
    {
      id: 'no_bans',
      name: 'üö´ Sem Banimentos',
      description: 'Conta limpa, sem hist√≥rico de bans',
      icon: 'üö´',
      category: 'account'
    },
    {
      id: 'purchase_history',
      name: 'üìú Com Hist√≥rico de Compras',
      description: 'Conta com hist√≥rico de compras no jogo',
      icon: 'üìú',
      category: 'account'
    },
    {
      id: 'immediate_access',
      name: 'üîì Acesso Imediato',
      description: 'Login direto sem senha tempor√°ria',
      icon: 'üîì',
      category: 'account'
    }
  ],
  skin: [
    {
      id: 'brand_new',
      name: 'üåü Nova',
      description: 'Skin nunca utilizada',
      icon: 'üåü',
      category: 'skin'
    },
    {
      id: 'reused',
      name: '‚ôªÔ∏è Reutilizada',
      description: 'Skin j√° foi utilizada anteriormente',
      icon: '‚ôªÔ∏è',
      category: 'skin'
    },
    {
      id: 'rare_skin',
      name: 'üõ°Ô∏è Rara',
      description: 'Skin de raridade especial',
      icon: 'üõ°Ô∏è',
      category: 'skin'
    },
    {
      id: 'limited_edition',
      name: 'üíé Edi√ß√£o Limitada',
      description: 'Skin de evento ou edi√ß√£o limitada',
      icon: 'üíé',
      category: 'skin'
    }
  ],
  giftcard: [
    {
      id: 'valid_code',
      name: 'üéÅ C√≥digo 100% V√°lido',
      description: 'Gift card com c√≥digo v√°lido e ativo',
      icon: 'üéÅ',
      category: 'giftcard'
    },
    {
      id: 'near_expiry',
      name: '‚åõ Pr√≥ximo de Expirar',
      description: 'Gift card pr√≥ximo da data de expira√ß√£o',
      icon: '‚åõ',
      category: 'giftcard'
    },
    {
      id: 'no_expiry',
      name: '‚ôæÔ∏è Sem Expira√ß√£o',
      description: 'Gift card sem data de expira√ß√£o',
      icon: '‚ôæÔ∏è',
      category: 'giftcard'
    },
    {
      id: 'high_value',
      name: 'üí∞ Alto Valor',
      description: 'Gift card de valor elevado',
      icon: 'üí∞',
      category: 'giftcard'
    }
  ],
  service: [
    {
      id: 'immediate_delivery',
      name: '‚è≥ Prazo Imediato',
      description: 'Servi√ßo executado imediatamente',
      icon: '‚è≥',
      category: 'service'
    },
    {
      id: 'scheduled_delivery',
      name: 'üìÖ Entrega Agendada',
      description: 'Servi√ßo com data e hora agendada',
      icon: 'üìÖ',
      category: 'service'
    },
    {
      id: 'guaranteed_result',
      name: 'üéØ Resultado Garantido',
      description: 'Servi√ßo com garantia de resultado',
      icon: 'üéØ',
      category: 'service'
    },
    {
      id: 'professional_service',
      name: 'üë®‚Äçüíº Servi√ßo Profissional',
      description: 'Executado por profissional experiente',
      icon: 'üë®‚Äçüíº',
      category: 'service'
    }
  ]
};

export class ConditionService {
  static getConditionsForCategory(category: string): Condition[] {
    return CONDITIONS_BY_CATEGORY[category] || [];
  }

  static getConditionById(id: string): Condition | undefined {
    for (const categoryConditions of Object.values(CONDITIONS_BY_CATEGORY)) {
      const condition = categoryConditions.find(c => c.id === id);
      if (condition) return condition;
    }
    return undefined;
  }

  static getAllConditions(): Condition[] {
    return Object.values(CONDITIONS_BY_CATEGORY).flat();
  }
}